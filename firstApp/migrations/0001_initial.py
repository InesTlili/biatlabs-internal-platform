# Generated by Django 2.0.2 on 2018-04-30 14:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.IntegerField()),
                ('b', models.IntegerField()),
                ('c', models.IntegerField()),
                ('d', models.IntegerField()),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('z', models.IntegerField()),
                ('v', models.IntegerField()),
                ('w', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('videoURL', models.URLField(blank=True, null=True)),
                ('videoURL2', models.URLField(blank=True, null=True)),
                ('videoURL3', models.URLField(blank=True, null=True)),
                ('videoURL4', models.URLField(blank=True, null=True)),
                ('videoURL5', models.URLField(blank=True, null=True)),
                ('articleURL', models.URLField(blank=True, null=True)),
                ('articleURL2', models.URLField(blank=True, null=True)),
                ('articleURL3', models.URLField(blank=True, null=True)),
                ('textContent', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('isActive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('founderMark', models.IntegerField()),
                ('founderNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('customerMark', models.IntegerField()),
                ('customerNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('productMark', models.IntegerField()),
                ('productNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('teamMark', models.IntegerField()),
                ('teamNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('vpMark', models.IntegerField()),
                ('vpNotes', models.CharField(blank=True, max_length=500, null=True)),
                ('financialMark', models.IntegerField()),
                ('financialNotes', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.IntegerField(unique=True)),
                ('Nearby', models.CharField(blank=True, max_length=100, null=True)),
                ('isFree', models.BooleanField(default=True)),
                ('adminValid', models.BooleanField(default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100)),
                ('isActive', models.BooleanField(default=False)),
                ('activationDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Need',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(choices=[('Kitchen / Coffee', 'Kitchen / Coffee'), ('Cleanness / Hygiene', 'Cleanness / Hygiene'), ('Internet / WIFI', 'Internet / WIFI'), ('Other', 'Other')], default='Kitchen / Coffee', max_length=200)),
                ('notes', models.CharField(max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('isDone', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Postit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space', models.CharField(choices=[('B@Labs - Av. Habib Bourguiba', 'B@Labs - Av. Habib Bourguiba')], default='B@Labs - Av. Habib Bourguiba', max_length=100)),
                ('typeOf', models.CharField(default='Small meeting room', max_length=100)),
                ('date', models.DateField(null=True)),
                ('startTime', models.TimeField(blank=True, null=True)),
                ('endTime', models.TimeField(blank=True, null=True)),
                ('duration', models.CharField(choices=[('30', '30'), ('60', '60')], default='30', max_length=100)),
                ('extraTime', models.CharField(choices=[('0', '0'), ('2', '2'), ('3', '3')], default='2hr', max_length=100)),
                ('isValidated', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('industry', models.CharField(max_length=100)),
                ('sector', models.CharField(max_length=100)),
                ('market', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilePic', models.ImageField(null=True, upload_to='profile_pics')),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Startup')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('visitedStartup', models.CharField(max_length=100)),
                ('date', models.DateField(blank=True, null=True)),
                ('timeIn', models.TimeField(blank=True, null=True)),
                ('cinId', models.IntegerField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(choices=[('B@Labs - Av. Habib Bourguiba', 'B@Labs - Av. Habib Bourguiba')], default='1', max_length=500)),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyObj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deadline', models.DateTimeField()),
                ('startup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Startup')),
                ('week', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Week')),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('theme', models.CharField(choices=[('Founder', 'Founder'), ('Team', 'Team'), ('Customer', 'Customer'), ('Value Proposition', 'Value Proposition'), ('Product', 'Product'), ('Financial', 'Financial')], default='Founder', max_length=100)),
                ('otherTheme', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('duration', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=100)),
                ('moderator', models.CharField(max_length=100)),
                ('isDone', models.BooleanField(default=False)),
                ('startups', models.ManyToManyField(blank=True, null=True, to='firstApp.Startup')),
            ],
        ),
        migrations.AddField(
            model_name='presence',
            name='startup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='firstApp.Startup'),
        ),
        migrations.AddField(
            model_name='objective',
            name='wol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.WeeklyObj'),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Startup'),
        ),
        migrations.AddField(
            model_name='course',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Module'),
        ),
        migrations.AddField(
            model_name='content',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstApp.Course'),
        ),
    ]
